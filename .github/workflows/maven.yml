name: CI/CD Pipeline

on:
  push:
    branches:
      - "main"
      - "dev"
      - "feature/*"
    paths:
      - 'src/**'
      - '.github/workflows/maven.yml'
      - 'docker-compose.yml'
      - 'Dockerfile'
  pull_request:
    branches:
      - "main"
      - "dev"
    paths:
      - 'src/**'
      - '.github/workflows/maven.yml'
      - 'docker-compose.yml'
      - 'Dockerfile'

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
      - name: Setup maven dependencies caching
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Run docker compose (build and start containers)
        run: docker compose up --build -d

      - name: Wait for database to be ready
        run: |
          timeout 30s bash -c 'until pg_isready -h localhost -p 5433; do sleep 1; done'

      - name: Run Tests
        run: mvn verify

      - name: Generate JaCoCo Report
        run: mvn jacoco:report
        env:
          SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5433/test_db
          SPRING_DATASOURCE_USERNAME: pguser
          SPRING_DATASOURCE_PASSWORD: password

      - name: Upload Coverage Report
        id: jacoco
        uses: madrapps/jacoco-report@v1
        with:
          path: ${{ github.workspace }}/target/site/jacoco/jacoco.xml
          token: ${{ secrets.GITHUB_TOKEN }}
          in-coverage-overall: 40
          min-coverage-changed-files: 60

      - name: Shut down docker
        if: always()
        run: docker compose down
  build-and-push:
    name: Build and Push Docker Image to docker hub
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Build & push Docker image
        uses: mr-smithers-excellent/docker-build-push@v5
        with:
          image: ayamneelmaini/citronix-api
          tags: latest
          registry: docker.io
          dockerfile: Dockerfile
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
